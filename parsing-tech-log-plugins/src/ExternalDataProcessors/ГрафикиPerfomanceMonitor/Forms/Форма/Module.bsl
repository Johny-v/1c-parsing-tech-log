&НаСервере
Перем КешПредставлений;

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	КешПредставлений = новый Соответствие();
КонецПроцедуры

&НаКлиенте
Процедура ПриОткрытии(Отказ)
	Если НЕ ЗначениеЗаполнено(ШиринаОкна) Тогда
		ШиринаОкна = "День";
	КонецЕсли;
	Если НЕ ЗначениеЗаполнено(НачалоПериода1) Тогда
		НачалоПериода1 = НачалоДня(ТекущаяДата());
	КонецЕсли;
	Если НЕ ЗначениеЗаполнено(ИнтервалОбновления) Тогда
		ИнтервалОбновления = 30;
	КонецЕсли;
	СформироватьГрафикМониторинга();
	ОбработатьОтображениеВРеальномВремени();
КонецПроцедуры




&НаСервере
Процедура СформироватьГрафикМониторинга()
	
	Перем Выборка, КоличествоОшибок, КоличествоПровалов, КоличествоПропущенных, КоличествоТестовыхСлучаев, КоличествоУспешных, СерияОшибки, СерияПадения, СерияПропуски, СерияУспешно, Статусы, ТочкаДиаграммы;
	
	// нет свойств и не надо рисовать
	Если Свойства.Количество()=0 Тогда
		Возврат; 
	КонецЕсли;
	
	Диаграмма_Мониторинга.Очистить();
	Диаграмма_Мониторинга.Анимация=АнимацияДиаграммы.НеИспользовать;

	
	// настройки графика
	Если НЕ ЗначениеЗаполнено(ВидГрафика_Мониторинга) Тогда
		ВидГрафика_Мониторинга="Гистограмма";
	КонецЕсли;
	Элементы.ВидГрафика_Мониторинга.РежимВыбораИзСписка = Истина;
	Элементы.ВидГрафика_Мониторинга.РедактированиеТекста = Ложь;
	Элементы.ВидГрафика_Мониторинга.СписокВыбора.Очистить();
	Элементы.ВидГрафика_Мониторинга.СписокВыбора.Добавить("Гистограмма");
	Элементы.ВидГрафика_Мониторинга.СписокВыбора.Добавить("График");
	Элементы.ВидГрафика_Мониторинга.СписокВыбора.Добавить("ГистограммаОбъемная");
	Элементы.ВидГрафика_Мониторинга.СписокВыбора.Добавить("ГрафикСОбластями");
	

	Диаграмма_Мониторинга.ТипДиаграммы=ТипДиаграммы[ВидГрафика_Мониторинга];
	
	СерияОкон = новый Соответствие();
	
	
	
	Для каждого стр из Свойства Цикл 
		СерияОкно1 = Диаграмма_Мониторинга.УстановитьСерию(стр.Значение);
		СерияОкон.Вставить(стр.Значение,СерияОкно1);
	КонецЦикла;
	
	
	Запрос = новый Запрос;
	Запрос.Текст = "ВЫБРАТЬ
	|	СРЕДНЕЕ(ВЫБОР
	|		КОГДА СобытияЗамера.Свойство.Процент
	|			ТОГДА СобытияЗамера.ЗначениеЧисло * 100
	|		ИНАЧЕ СобытияЗамера.ЗначениеЧисло
	|	КОНЕЦ) КАК Значение,
	|	СобытияЗамера.Свойство КАК Свойство,
	|	-РАЗНОСТЬДАТ(СобытияЗамера.Ссылка.ДатаСобытия, &Интервал1Начало, &ЧАС) КАК КоличествоЧасовОтНачалаИнтервала
	|ПОМЕСТИТЬ ВтПовторенияИнтервал1
	|ИЗ
	|	Справочник.СобытияЗамера.КлючевыеСвойства КАК СобытияЗамера
	|ГДЕ
	|	СобытияЗамера.Ссылка.Владелец = &Замер
	|	И СобытияЗамера.Свойство В (&МассивСвойств)
	|	И СобытияЗамера.Ссылка.ДатаСобытия МЕЖДУ &Интервал1Начало И &Интервал1Окончание
	|СГРУППИРОВАТЬ ПО
	|	СобытияЗамера.Свойство,
	|	-РАЗНОСТЬДАТ(СобытияЗамера.Ссылка.ДатаСобытия, &Интервал1Начало, &ЧАС)
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	КоличествоЧасовОтНачалаИнтервала
	|;
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ТЗ.Количество КАК КоличествоЧасовОтНачалаИнтервала
	|ПОМЕСТИТЬ ВтШкалаВремени
	|ИЗ
	|	&ТЗШкала как ТЗ
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	КоличествоЧасовОтНачалаИнтервала
	|;
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	ВтПовторенияИнтервал1.Свойство
	|ПОМЕСТИТЬ ВтСобытия
	|ИЗ
	|	ВтПовторенияИнтервал1 КАК ВтПовторенияИнтервал1
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ВтСобытия.Свойство КАК Свойство,
	|	ВтШкалаВремени.КоличествоЧасовОтНачалаИнтервала КАК КоличествоЧасовОтНачалаИнтервала,
	|	""нд"" КАК Значение
	|ПОМЕСТИТЬ ВтШкалаНД
	|ИЗ
	|	ВтШкалаВремени КАК ВтШкалаВремени,
	|	ВтСобытия КАК ВтСобытия
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	Свойство,
	|	КоличествоЧасовОтНачалаИнтервала
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ЕСТЬNULL(ВтОбъединениеНаШкале.КоличествоЧасовОтНачалаИнтервала, ВтШкалаНД.КоличествоЧасовОтНачалаИнтервала) КАК
	|		КоличествоЧасовОтНачалаИнтервала,
	|	ЕСТЬNULL(ВтОбъединениеНаШкале.Свойство, ВтШкалаНД.Свойство) КАК Свойство,
	|	ЕСТЬNULL(ВтОбъединениеНаШкале.Значение, ВтШкалаНД.Значение) КАК Значение
	|ИЗ
	|	ВтПовторенияИнтервал1 КАК ВтОбъединениеНаШкале
	|		ПОЛНОЕ СОЕДИНЕНИЕ ВтШкалаНД КАК ВтШкалаНД
	|		ПО ВтОбъединениеНаШкале.КоличествоЧасовОтНачалаИнтервала = ВтШкалаНД.КоличествоЧасовОтНачалаИнтервала
	|		И ВтОбъединениеНаШкале.Свойство = ВтШкалаНД.Свойство
	|УПОРЯДОЧИТЬ ПО
	|	КоличествоЧасовОтНачалаИнтервала";
	
	ШиринаОкнаСекунды = ПолучитьШиринуОкна(ШиринаОкна);
	
	ОтносительнаяШкала = "ЧАС";
	
	Если ШиринаОкна="Час" Тогда
		ОтносительнаяШкала = "МИНУТА";
	ИначеЕсли ШиринаОкна="День" Тогда
		ОтносительнаяШкала = "ЧАС";	
	ИначеЕсли ШиринаОкна="Неделя" Тогда
		ОтносительнаяШкала = "ДЕНЬ";
	ИначеЕсли ШиринаОкна="Месяц" Тогда
		ОтносительнаяШкала = "ДЕНЬ";
	КонецЕсли;
	
	ТЗШкала = ПолучитьТЗШкала(ШиринаОкна);
	
	Запрос.Текст = СтрЗаменить(Запрос.Текст,"&ЧАС",ОтносительнаяШкала);
	
	Запрос.УстановитьПараметр("Замер",Замер);
	Запрос.УстановитьПараметр("Интервал1Начало",НачалоПериода1);
	Запрос.УстановитьПараметр("Интервал1Окончание",НачалоПериода1+ШиринаОкнаСекунды);
	Запрос.УстановитьПараметр("МассивСвойств",Свойства.ВыгрузитьЗначения());
	Запрос.УстановитьПараметр("ТЗШкала",ТЗШкала);
	
	
	Выборка = Запрос.Выполнить().Выбрать();
	

	Пока Выборка.Следующий() Цикл
		
		
		//СерияОкно1.Цвет = новый Цвет(155,50,50);	
		
		СерияОкно = СерияОкон.Получить(Выборка.Свойство);
		Если НЕ СерияОкно=Неопределено Тогда
			// установим точку
			Количество = ПолучитьПредставлениеКоличества(ШиринаОкна,Выборка.КоличествоЧасовОтНачалаИнтервала,НачалоПериода1,КешПредставлений);
			ТочкаДиаграммы = Диаграмма_Мониторинга.УстановитьТочку(Количество);
				
			// добавим значение	
			Диаграмма_Мониторинга.УстановитьЗначение(ТочкаДиаграммы,СерияОкно, Выборка.Значение);
		КонецЕсли;
		
		
	КонецЦикла;
	
	
	Диаграмма_Мониторинга.ВидПодписей=ВидПодписейКДиаграмме.Значение;

КонецПроцедуры

&НаСервереБезКонтекста
Функция ПолучитьПредставлениеКоличества(ШиринаОкна,Количество,НачалоПериода,КешПредставлений)
	
	Если КешПредставлений=Неопределено Тогда
		КешПредставлений = новый Соответствие();
	КонецЕсли;
	
	КлючПериода = Неопределено;
	Если ШиринаОкна="Час" Тогда
		КлючПериода = Минута(НачалоПериода);
	ИначеЕсли ШиринаОкна="День" Тогда
		КлючПериода = Час(НачалоПериода);
	ИначеЕсли ШиринаОкна="Неделя" Тогда
		КлючПериода = ДеньНедели(НачалоПериода); 
	ИначеЕсли ШиринаОкна="Месяц" Тогда
		КлючПериода = День(НачалоПериода); 
	КонецЕсли;
	
	КлючКеш = ШиринаОкна+"/"+Количество+"/"+КлючПериода;
	ПредставлениеКоличества = КешПредставлений.Получить(КлючКеш);
	
	Если НЕ ПредставлениеКоличества=Неопределено Тогда
		Возврат ПредставлениеКоличества;
	КонецЕсли;
	
	ПредставлениеКоличества = Количество;
	
	Если ШиринаОкна="Час" Тогда
		
		Смещение = КлючПериода;
		
		ПредставлениеКоличества = Количество+Смещение;
		Если ПредставлениеКоличества>60 Тогда
			ПредставлениеКоличества = ПредставлениеКоличества-60;
		КонецЕсли;
				
	ИначеЕсли ШиринаОкна="День" Тогда
		
		Смещение = КлючПериода;
		
		ПредставлениеКоличества = Количество+Смещение;
		Если ПредставлениеКоличества>24 Тогда
			ПредставлениеКоличества = ПредставлениеКоличества-24;
		КонецЕсли;
		
		
	ИначеЕсли ШиринаОкна="Неделя" Тогда
		
		Смещение = КлючПериода-1;
		
		Если Количество+Смещение=0 ИЛИ Количество+Смещение=7 Тогда
			ПредставлениеКоличества = "пн";
		ИначеЕсли Количество+Смещение=1 ИЛИ Количество+Смещение=8 Тогда
			ПредставлениеКоличества = "вт";
		ИначеЕсли Количество+Смещение=2 ИЛИ Количество+Смещение=9 Тогда
			ПредставлениеКоличества = "ср";
		ИначеЕсли Количество+Смещение=3 ИЛИ Количество+Смещение=10 Тогда
			ПредставлениеКоличества = "чт";
		ИначеЕсли Количество+Смещение=4 ИЛИ Количество+Смещение=11 Тогда
			ПредставлениеКоличества = "пт";
		ИначеЕсли Количество+Смещение=5 ИЛИ Количество+Смещение=12 Тогда
			ПредставлениеКоличества = "сб";
		ИначеЕсли Количество+Смещение=6 ИЛИ Количество+Смещение=13 Тогда
			ПредставлениеКоличества = "вс";
		Иначе
			ПредставлениеКоличества = "??";
		КонецЕсли;
		
	ИначеЕсли ШиринаОкна="Месяц" Тогда
		
		Смещение = КлючПериода;
		Дней = День(КонецМесяца(НачалоПериода));
		ПредставлениеКоличества = Количество+Смещение;
		Если ПредставлениеКоличества>Дней Тогда
			ПредставлениеКоличества = ПредставлениеКоличества-Дней;
		КонецЕсли;
		
		
	КонецЕсли;
	
	КешПредставлений.Вставить(КлючКеш,ПредставлениеКоличества);
	
	Возврат ПредставлениеКоличества;
	
КонецФункции

&НаКлиенте
Процедура ЗамерПриИзменении1(Элемент)
	//TODO: Вставить содержимое обработчика
КонецПроцедуры


&НаСервереБезКонтекста
Функция ПолучитьТЗШкала(ШиринаОкна="День")
	
	МассивТипов = новый Массив;
	МассивТипов.Добавить(Тип("Число"));
	ОписаниеТипов = новый ОписаниеТипов(МассивТипов, , , , );
	
	ТЗ = новый ТаблицаЗначений();
	колонка = ТЗ.Колонки.Добавить("Количество",ОписаниеТипов);

	Если ШиринаОкна="Час" Тогда
		Для ш=0 по 60 Цикл
			стр = ТЗ.Добавить();
			стр.Количество = ш;
		КонецЦикла;		
	ИначеЕсли ШиринаОкна="День" Тогда
		Для ш=0 по 24 Цикл
			стр = ТЗ.Добавить();
			стр.Количество = ш;
		КонецЦикла;
	ИначеЕсли ШиринаОкна="Неделя" Тогда
		Для ш=0 по 7 Цикл
			стр = ТЗ.Добавить();
			стр.Количество = ш;
		КонецЦикла;		
	ИначеЕсли ШиринаОкна="Месяц" Тогда
		Для ш=0 по 30 Цикл
			стр = ТЗ.Добавить();
			стр.Количество = ш;
		КонецЦикла;		
	КонецЕсли;
	
	Возврат ТЗ;
	
КонецФункции

&НаКлиенте
Процедура Обновить(Команда)
	СформироватьГрафикМониторинга();
КонецПроцедуры

&НаКлиенте
Процедура Вперед(Команда)
	ШиринаОкнаСекунды = ПолучитьШиринуОкна(ШиринаОкна);
	НачалоПериода1 = НачалоПериода1 + ШиринаОкнаСекунды;
	СформироватьГрафикМониторинга();
КонецПроцедуры

&НаКлиенте
Процедура Назад(Команда)
	ШиринаОкнаСекунды = ПолучитьШиринуОкна(ШиринаОкна);
	НачалоПериода1 = НачалоПериода1 - ШиринаОкнаСекунды;
	СформироватьГрафикМониторинга();
КонецПроцедуры

&НаКлиентеНаСервереБезКонтекста
Функция ПолучитьШиринуОкна(ШиринаОкна="День")
	ШиринаОкнаСекунды = 24*60*60; // по умолчанию сутки
	
	Если ШиринаОкна="Час" Тогда
		ШиринаОкнаСекунды = 60*60;
	ИначеЕсли ШиринаОкна="Неделя" Тогда
		ШиринаОкнаСекунды = 7*24*60*60;
	ИначеЕсли ШиринаОкна="Месяц" Тогда
		ШиринаОкнаСекунды = 30*24*60*60;
	КонецЕсли;
	
	Возврат ШиринаОкнаСекунды;
КонецФункции

&НаКлиенте
Процедура ВидГрафика_МониторингаПриИзменении(Элемент)
	СформироватьГрафикМониторинга();
КонецПроцедуры

&НаКлиенте
Процедура ЗамерПриИзменении(Элемент)
	СформироватьГрафикМониторинга();
КонецПроцедуры

&НаКлиенте
Процедура НачалоПериода1ПриИзменении(Элемент)
	СформироватьГрафикМониторинга();
КонецПроцедуры


&НаКлиенте
Процедура ШиринаОкнаПриИзменении(Элемент)
	СформироватьГрафикМониторинга();
	
	// не доступно для других окон
	Если НЕ (ШиринаОкна="Час" ИЛИ ШиринаОкна="День") Тогда
		Элементы.ВРеальномВремени.Доступность=Ложь;
		ВРеальномВремени = Ложь;
	Иначе
		Элементы.ВРеальномВремени.Доступность=Истина;
	КонецЕсли;	
	
КонецПроцедуры

&НаКлиенте
Процедура ВРеальномВремениПриИзменении(Элемент)
	ОбработатьОтображениеВРеальномВремени(Истина);
КонецПроцедуры

&НаКлиенте
Процедура ОбработатьОтображениеВРеальномВремени(ФлагИзменения=Ложь)
	
	// приведем начало интервала к реальному времени окна
	Если ФлагИзменения=Истина Тогда
		Если ШиринаОкна="Час" Тогда
			НачалоПериода1 = НачалоЧаса(ТекущаяДата());
		ИначеЕсли ШиринаОкна="День" Тогда
			НачалоПериода1 = НачалоДня(ТекущаяДата());
		КонецЕсли;
	КонецЕсли;
	
	Если ВРеальномВремени=Истина Тогда
		ПодключитьОбработчикОжидания("АвтообновлениеГрафикМониторинга",ИнтервалОбновления,Ложь );
	Иначе
		ОтключитьОбработчикОжидания("АвтообновлениеГрафикМониторинга");
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ИнтервалОбновленияПриИзменении(Элемент)
	Если ИнтервалОбновления<15 Тогда
		ИнтервалОбновления=15;
	КонецЕсли;
	ОтключитьОбработчикОжидания("АвтообновлениеГрафикМониторинга");
	ПодключитьОбработчикОжидания("АвтообновлениеГрафикМониторинга",ИнтервалОбновления,Ложь );
КонецПроцедуры

&НаКлиенте
Процедура АвтообновлениеГрафикМониторинга() Экспорт
	СформироватьГрафикМониторинга();
КонецПроцедуры

