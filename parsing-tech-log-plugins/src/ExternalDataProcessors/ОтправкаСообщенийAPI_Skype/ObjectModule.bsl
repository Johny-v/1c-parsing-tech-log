#Область ДополнительныеОбработки

Функция СведенияОВнешнейОбработке() Экспорт
	
	МассивНазначений = Новый Массив;
	
	ПараметрыРегистрации = Новый Структура;
	ПараметрыРегистрации.Вставить("Вид", "ДополнительнаяОбработка");
	ПараметрыРегистрации.Вставить("Назначение", МассивНазначений);
	ПараметрыРегистрации.Вставить("Наименование", "Отправка сообщений через API Skype");
	ПараметрыРегистрации.Вставить("Версия", "2020.05.11");
	ПараметрыРегистрации.Вставить("БезопасныйРежим", Ложь);
	ПараметрыРегистрации.Вставить("Информация", ИнформацияПоИсторииИзменений());
	ПараметрыРегистрации.Вставить("ВерсияБСП", "1.2.1.4");
	ТаблицаКоманд = ПолучитьТаблицуКоманд();
	ДобавитьКоманду(ТаблицаКоманд,
	                "Настройка отправки сообщений через API Skype",
					"ОтправкаСообщенийAPI_Skype",
					"ОткрытиеФормы",
					Истина,
					);
	ПараметрыРегистрации.Вставить("Команды", ТаблицаКоманд);
	
	Возврат ПараметрыРегистрации;
	
КонецФункции

Функция ПолучитьТаблицуКоманд()
	
	Команды = Новый ТаблицаЗначений;
	Команды.Колонки.Добавить("Представление", Новый ОписаниеТипов("Строка"));
	Команды.Колонки.Добавить("Идентификатор", Новый ОписаниеТипов("Строка"));
	Команды.Колонки.Добавить("Использование", Новый ОписаниеТипов("Строка"));
	Команды.Колонки.Добавить("ПоказыватьОповещение", Новый ОписаниеТипов("Булево"));
	Команды.Колонки.Добавить("Модификатор", Новый ОписаниеТипов("Строка"));
	
	Возврат Команды;
	
КонецФункции

Процедура ДобавитьКоманду(ТаблицаКоманд, Представление, Идентификатор, Использование, ПоказыватьОповещение = Ложь, Модификатор = "")
	
	НоваяКоманда = ТаблицаКоманд.Добавить();
	НоваяКоманда.Представление = Представление;
	НоваяКоманда.Идентификатор = Идентификатор;
	НоваяКоманда.Использование = Использование;
	НоваяКоманда.ПоказыватьОповещение = ПоказыватьОповещение;
	НоваяКоманда.Модификатор = Модификатор;
	
КонецПроцедуры

Функция ИнформацияПоИсторииИзменений()
	Возврат "
	| <div style='text-indent: 25px;'>Данная обработка позволяет отправлять сообщения через API Skype.</div>
	| <hr />
	| Подробную информацию смотрите по адресу интернет: <a target='_blank' href='https://github.com/Polyplastic/1c-parsing-tech-log'>https://github.com/Polyplastic/1c-parsing-tech-log</a><br /><br />
	| P.S. Про получение настроек для работы обработки можно почитать тут: <a target='_blank' href='https://infostart.ru/public/962753/'>Отправка сообщений в Skype через Microsoft Bot Framework API</a>";
	
КонецФункции


Процедура ОтправитьСообщение(Знач УчетнаяЗапись, Параметры=Неопределено, ТекстСообщения="" ) Экспорт
	
	мНастройки = УправлениеХранилищемНастроекВызовСервера.ДанныеИзБезопасногоХранилища(УчетнаяЗапись);
	
	Токен = ПолучитьТокенSkype(УчетнаяЗапись, мНастройки.IDПриложения,мНастройки.Пароль);
	
	ОтправитьСообщениеSkype(Токен,мНастройки.IDЧата,ТекстСообщения);
	
КонецПроцедуры

#КонецОбласти

#Область SkypeAPI


Функция ПолучитьТокенSkype(УчетнаяЗапись, IDПриложения, Пароль) Экспорт
	
	ДанныеНастроек = ХранилищеСистемныхНастроек.Загрузить(Строка(УчетнаяЗапись), "Skype");
	Если ДанныеНастроек <> Неопределено И ДанныеНастроек.Свойство("ТокенBearer") И ДанныеНастроек.Свойство("ДатаПолученияBearer") И ДанныеНастроек.ДатаПолученияBearer > ТекущаяДата() - 55 * 60 Тогда
		ТокенBearer = ДанныеНастроек.ТокенBearer;
		Возврат ТокенBearer;
	КонецЕсли;
	
	//grant_type=client_credentials&client_id=cffbb6ea-1f60-4d57-9d5b-1f04cedd239a&client_secret=jisp2}^{zngUTHHKTJ7547?&scope=https%3A%2F%2Fapi.botframework.com%2F.default
	ТелоЗапросаJSON = "grant_type=client_credentials&client_id=" + IDПриложения + "&client_secret=" + Пароль + "&scope=https%3A%2F%2Fapi.botframework.com%2F.default";

	HTTPСоединение = Новый HTTPСоединение("login.microsoftonline.com", Неопределено, Неопределено, Неопределено, Неопределено, 120, Новый ЗащищенноеСоединениеOpenSSL);

	ЗаголовкиHTTP = Новый Соответствие;
	ЗаголовкиHTTP.Вставить("Content-Type", "application/x-www-form-urlencoded");

	HTTPЗапрос = Новый HTTPЗапрос("botframework.com/oauth2/v2.0/token", ЗаголовкиHTTP);
	HTTPЗапрос.УстановитьТелоИзСтроки(ТелоЗапросаJSON);


	HTTPОтвет = HTTPСоединение.ВызватьHTTPМетод("POST", HTTPЗапрос);
	HTTPОтветТело = HTTPОтвет.ПолучитьТелоКакСтроку();
	
	ЧтениеJSON = Новый ЧтениеJSON;
	ЧтениеJSON.УстановитьСтроку(HTTPОтветТело);
	HTTPОтветСтруктура = ПрочитатьJSON(ЧтениеJSON);

	Если Не (HTTPОтвет.КодСостояния = 200) Или ТипЗнч(HTTPОтветСтруктура) = Тип("Структура") И HTTPОтветСтруктура.Свойство("error") Тогда
		ОписаниеОшибки = "Ошибка: " + HTTPОтвет.КодСостояния + ?(ТипЗнч(HTTPОтветСтруктура) = Тип("Структура") И HTTPОтветСтруктура.Свойство("error_description"), HTTPОтветСтруктура.error_description, "");
		ЗаписьЖурналаРегистрации("ЧатБот.Skype:", УровеньЖурналаРегистрации.Предупреждение, , , ОписаниеОшибки);
		ВызватьИсключение ОписаниеОшибки;
	КонецЕсли;

	ТокенBearer = HTTPОтветСтруктура.access_token;
	
	ХранилищеСистемныхНастроек.Сохранить(Строка(УчетнаяЗапись), "Skype", Новый Структура("ТокенBearer, ДатаПолученияBearer", ТокенBearer, ТекущаяДата()));

	Возврат ТокенBearer;
КонецФункции

Функция ОтправитьСообщениеSkype(Токен, IDЧата, ТекстСообщения) Экспорт
	HTTPСоединение = Новый HTTPСоединение("smba.trafficmanager.net", Неопределено, Неопределено, Неопределено, Неопределено, 120, Новый ЗащищенноеСоединениеOpenSSL);

	ЗаголовкиHTTP = Новый Соответствие;
	ЗаголовкиHTTP.Вставить("Content-Type", "application/json");
	ЗаголовкиHTTP.Вставить("Authorization", "Bearer " + Токен);

	JSONСтруктура = Новый Структура;
	JSONСтруктура.Вставить("conversation", Новый Структура);
	JSONСтруктура.conversation.Вставить("id", IDЧата);
	JSONСтруктура.Вставить("from", Новый Структура);
	JSONСтруктура.from.Вставить("id", "");
	JSONСтруктура.Вставить("type", "message");
	JSONСтруктура.Вставить("text", ТекстСообщения);
	
	ЗаписьJSON = Новый ЗаписьJSON;
	ЗаписьJSON.УстановитьСтроку();
	ЗаписатьJSON(ЗаписьJSON, JSONСтруктура);
	ТелоЗапросаJSON = ЗаписьJSON.Закрыть();


	//https://smba.trafficmanager.net/apis/v3/conversations/29:1SbCdrSJNcsZnoQ_x4xaOMu27l4MSfF7iyhfaHgzW_f8/activities
	HTTPЗапрос = Новый HTTPЗапрос("apis/v3/conversations/" + IDЧата + "/activities", ЗаголовкиHTTP);
	HTTPЗапрос.УстановитьТелоИзСтроки(ТелоЗапросаJSON);

	HTTPОтвет = HTTPСоединение.ВызватьHTTPМетод("POST", HTTPЗапрос);
	HTTPОтветТело = HTTPОтвет.ПолучитьТелоКакСтроку();
	
	ЧтениеJSON 					= Новый ЧтениеJSON;                   	
	ЧтениеJSON.УстановитьСтроку(HTTPОтветТело);             	
	HTTPОтветСтруктура 			= ПрочитатьJSON(ЧтениеJSON);

	Если Не (HTTPОтвет.КодСостояния = 200 Или HTTPОтвет.КодСостояния = 201) Тогда
		ОписаниеОшибки = "Ошибка: " + HTTPОтвет.КодСостояния + ?(ТипЗнч(HTTPОтветСтруктура) = Тип("Структура") И HTTPОтветСтруктура.Свойство("error") И HTTPОтветСтруктура.error.Свойство("message"), " - " + HTTPОтветСтруктура.error.message, "");
		ЗаписьЖурналаРегистрации("ЧатБот.Skype:", УровеньЖурналаРегистрации.Предупреждение, , , ОписаниеОшибки);
		ВызватьИсключение ОписаниеОшибки;
	КонецЕсли;

	Возврат HTTPОтветСтруктура;
КонецФункции

#КонецОбласти